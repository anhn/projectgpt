Students have several theory lectures in the beginning of the course and weekly supervision during their projects. Although the list of topics changes somewhat year to year, they basically include development processes and practices, software engineering advanced topics, teamwork, and technical report writing. Students are divided into teams of four to six students. Each team decides by themselves about their management and leadership mechanisms. In most of the cases, students organize themselves using a flat organizational structure within the team. Decision making is often done collectively and the reasons for important decisions are documented in the final reports. There are several lectures at the beginning of the course teaching topics such as project management, team dynamics, Scrum, architecture, and testing.

Students typical engage in three phases of their projects, which are planning, execution and closing. In the planning phase, the students get to know their team members, customers, and their project requirements. The students need to decide roles and areas of responsibility for each member. They also make a preliminary project plan and set up the working environment. In the execution phase, the student teams typically carry out Scrum sprints with frequent deliveries in sprint reviews. Each project covers fundamental SE activities, i.e., requirement elicitation, architecture level design, coding, and testing. Students also write a project report that reflects their team’s progress. In the closing phase, the project results are submitted in a report; they are also demonstrated and presented to the customer and course staff (e.g., course instructor, supervising teaching assistant). 

1. Faglig innhold i emnet
Studentene skal anvende kunnskapen fra førsteårsemner i studiet for å gjennomføre et praktisk systemutviklingsprosjekt. Det legges vekt på studentenes evne til å reflektere over fagstoffet, og evnen til å foreta en kritisk vurdering av sammenhengen mellom teori og praksis.

2. Forkunnskapskrav
Grunnleggende programmering med Web Utvikling og HCI
Prototyping og Usability Test
3. Læringsutbytte
3.1. Kunnskap
Etter fullført emne skal studenten ha kunnskap om prosjektarbeid og prosjektmetodikk som grunnlag for å kunne gjennomføre et prosjektarbeid
Prosjektledelse: hvordan å planlegge, utføre og levere et prosjekt
Software prosesser: forskjellige Software aktiviteter og metodologier, for eksempel Scrum.
3.2. Ferdigheter
Programmering ferdigheter: ulike erfaringer med å jobbe med frontend, backend, database og mobile applikasjoner
Team dynamic: Arbeider i et programvareutviklingsteam
Interaksjon med kunder: å jobbe med et assistert kundesystem
Problemløsning ferdigheter
Konflikthåndtering: Hvordan komme igjennom vanskelige situasjoner med lagmedlemmer dine
Debat og forhandle: Beskytt og forsvar for dine egne ideer
3.3. Generell kompetanse
Etter fullført emne skal studenten kunne planlegge og gjennomføre prosjekter sammen med andre reflektere over egen faglig utøvelse og justere denne under veiledning analysere relevante IT-faglige problemstillinger.
Formidle fremgangsmåter og resultater i forbindelse med IT-faglige prosjekter og arbeidsoppgaver, samt beherske IT-faglige uttrykksformer både i relasjon til kommunikasjon med IT-spesialister og allmennheten.
4. Læringsaktiviteter
Flipped klasserom med lysbilder, videoer og lesemateriell
Selvstendig arbeid i grupper
Student presentasjoner og tilbakemelinger
Deltakelse i obligatoriske arbeidskrav
