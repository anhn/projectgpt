Project Description: GreenCode Initiative Website. The goal of this project is to design and develop a website that promotes sustainable programming practices (also known as Green Software Development). The website will serve as an educational and inspirational place for those who are interested in building software systems that are energy-efficient, environmentally friendly, and socially responsible. The possible users of the website include software developers interested in learning and applying sustainable coding practices to reduce the environmental impact of their work. Students and teachers in computer science or related fields can use the platform as a learning tool to explore the principles of green software development. Additionally, startups and tech companies looking to incorporate eco-friendly practices into their workflows, as well as sustainability advocates and environmental researchers exploring technology's role in reducing carbon emissions, would find the website valuable for its educational content and tools.

Possible customers who can pay to use the website include tech companies and software development firms seeking premium tools and resources, such as detailed optimization reports or sustainable coding certification programs. Educational institutions and corporate training programs might subscribe to access specialized content or use the platform for teaching green software practices. Additionally, sustainability-focused organizations and NGOs might invest in premium features to integrate green coding principles into their initiatives or fund the development of additional tools and resources for broader impact.

The website should have at least five pages as below:
Suggested Structure of the Website
1. Home Page
Purpose: To introduce the mission and importance of sustainable programming.
Key Elements:
A hero section with an engaging headline like: "Build Smarter. Code Greener." A visually compelling graphic or video emphasizing the environmental impact of software.
Call-to-action (CTA) buttons, e.g., "Learn More," "Start Your Green Journey." But come up with your own headline.
A summary of the main sections of the website with quick links.
2. About Green Programming
Purpose: To educate users on what Green programming is and why it matters.
Key Elements:
A blogs with with at least the five articles of the following topics:
Efficient algorithms
Low-energy hardware integration
Optimized code structures
Cloud resource optimization
Sustainable webdesign 
Each article should provide a link to external resources for further reading.
3. Sustainable Practices Toolkit
Purpose: To introduce and provide a list of tools, frameworks and checklists for sustainable programming practices
Key Elements:
A list of tools are: 
https://www.thegreenwebfoundation.org/tools/
https://calculator.green-algorithms.org/
https://www.suso.academy/en/sustainability-awareness-framework-susaf/
https://www.websitecarbon.com/
https://housing.uga.edu/sa_docs/sustainability/sustainability_programchecklist.pdf
https://w3c.github.io/sustyweb/checklist.pdf
https://github.com/thegreenwebfoundation/co2.js/
https://carbon-aware-sdk.greensoftware.foundation/
https://codecarbon.io/
https://powerapi.org/#open-source

4. Case study
Purpose: To present a case study about the adoption of green coding.
Key Elements:
Present a case study from a IT professions or educators when using the website

5. Contact Page
Purpose: To facilitate communication and inquiries.
Key Elements:
A contact form for feedback or inquiries.
FAQs related to the website's content.

Project Deliverables
1. A fully functional, responsive website that raises awareness about sustainable programming practices.
2. Research and content creation by students on sustainable software practices.
3. The transcript of the interview for Case study page
4. Implementation of modern, efficient, and clean web design principles.

We do not have any brand design yet. You are all free to design the logo, color palette, typography and icons.

Technically, we want prototypes to be maded with Figma. The prototypes should be interactive with multiple screens. The final website can be implemented using Wix, Wordpress or our own code with HTML, CSS and Javascript. The website can be static, without the backend. Implementation of the backend part is a plus. In the end, the website should be hosted and published (just for the purpose of this course).  

The project will start from second week of January 2024 and end at the end of April 2024.

Evaluation Criteria
Visual Appeal: Is the design sustainable, engaging, and consistent with the green theme?
Functionality: Are web pages accessible, functional as intented?
Content: are all required content presented in a good way ?
Quality: are the website tested with usability test and system test?

Exercise 2 - Stakeholder analysis. Act as a lecturer in a software project management course. Students are asked to list all potential stakeholders. Classify them based on their interest, influence, and impact on the project. Anticipate any potential conflicts of interest in term of website functionalities among them. 

Write feedback with the template as follows: 

First of all, write one sentence to introduce the feedback purpose and, the connection of doing this exercise to the course module - Introduction to Project and Project Management. Secondly, in the next paragraph write a brief evaluation using the rubric. Give the assessment out of the full scale. 

Secondly, in the next paragraph, evaluate the answers and give the associating evaluation level. Four levels of evaluation are Level 1 - Unsastifactor, Level 2 - Needs Improvement, Level 3 - Satisfactory and Level 4 - Excellence. For answer in Level 2, level 3 and level 4, write comments regarding the completeness and correctness of identified stakeholders, reasonable arguments for their interest, influence and impact.
Completely Out of Topic: the student writes something unrelated to the exercise, asks questions, or provides irrelevant information. Level 1
Partial Answer: the student addresses only a portion of the question (e.g., identifies stakeholders but does not classify them or anticipate conflicts). Level 2
General and Superficial Answer: the answer is vague or lacks depth, providing broad statements without specific examples or justification. Level 2
Misunderstanding the Question: the student misinterprets the task, such as confusing stakeholder roles with general project goals or focusing on technical aspects unrelated to stakeholders. Level 2
Missing Key Stakeholders: the student identifies some stakeholders but omits significant groups (e.g., regulatory bodies or software developers). Level 2
No Anticipation of Conflicts: The student identifies stakeholders but does not consider potential conflicts between them. Level 3
Excellent but Slightly Incomplete Answer: The student provides a strong response but misses minor aspects, such as deeper justification for classifications or elaboration on conflict resolutions. Level 3
Excellent and Comprehensive Answer: The student thoroughly addresses all parts of the exercise with clear identification, classification, anticipation of conflicts, and realistic resolution strategies. Level 4
 
Thirdly briefly summarize the strengths and weaknesses of the answer. Quote one good_sentence to illustrate for the strength and put it inside this template :green[good_sentence]. Quote one bad_sentence to illustrate for the weaknesses and put it inside this template :red[bad_sentence]. Note that only giving quotes if the good_sentence or bad_sentence can be found within the student answer.

Fourthly, a headline Action points and then followed bullet points at most three actionable points to address the given feedback. 

Finally, basing on the current evaluation level of this student and what they should do, write a simple question or motivating sentence to encourage the student start with fixing the feedback. 
