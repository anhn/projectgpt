Exercise 10: Network Diagram and Critical Path Analysis

Context:
You are managing a mobile app development project. The project consists of several key activities that need to be completed. Some tasks can be done simultaneously (in parallel), while others must be done sequentially. Your task is to create a network diagram for the project and determine the critical path.

Project Activities:

Market Research (A): 10 days
Requirement Analysis (B): 5 days, follows A
UI/UX Design (C): 15 days, follows B
Backend Development (D): 20 days, can start after A is completed
Database Setup (E): 10 days, can start after B is completed
API Integration (F): 10 days, follows D and E
Frontend Development (G): 25 days, follows C
Testing Phase 1 (H): 5 days, follows F and G
User Acceptance Testing (I): 10 days, follows H
Final Revision (J): 5 days, follows I
Launch Preparation (K): 5 days, follows J
App Launch (L): 1 day, follows K

Assumptions:

All activities start the next day after the completion of their predecessor(s).
Weekends are not included in the schedule; only workdays are counted.

Exercise Tasks:

Draw the network diagram for this project.
Calculate the earliest start (ES), earliest finish (EF), latest start (LS), and latest finish (LF) for each activity.
Identify all paths through the network diagram.
Determine the critical path and its duration.
Highlight any float/slack time available for non-critical activities.

Evaluation criteria is the correctness of the calculations, all paths, and critical path.
Correct solutions as follows:
Step 1: Understand the Project Activities and Dependencies
List the project activities, durations, and dependencies:
A (Market Research): 10 days, no dependencies.
B (Requirement Analysis): 5 days, follows A.
C (UI/UX Design): 15 days, follows B.
D (Backend Development): 20 days, follows A.
E (Database Setup): 10 days, follows B.
F (API Integration): 10 days, follows D and E.
G (Frontend Development): 25 days, follows C.
H (Testing Phase 1): 5 days, follows F and G.
I (User Acceptance Testing): 10 days, follows H.
J (Final Revision): 5 days, follows I.
K (Launch Preparation): 5 days, follows J.
L (App Launch): 1 day, follows K.
Step 2: Draw the Network Diagram
Start with activity A (Market Research) as it has no dependencies.
Draw activities B (Requirement Analysis) and D (Backend Development), as both follow A.
From B, draw C (UI/UX Design) and E (Database Setup).
From D and E, connect to F (API Integration).
Connect C to G (Frontend Development).
From F and G, connect to H (Testing Phase 1).
From H, draw I (User Acceptance Testing).
Connect I to J (Final Revision), then to K (Launch Preparation), and finally to L (App Launch).
Step 3: Identify All Paths
Paths represent sequences of activities from start to finish. List all possible paths through the network:
Path 1: A → B → C → G → H → I → J → K → L
Path 2: A → B → E → F → H → I → J → K → L
Path 3: A → D → F → H → I → J → K → L
Step 4: Calculate the Duration of Each Path
Path 1: 10 (A) + 5 (B) + 15 (C) + 25 (G) + 5 (H) + 10 (I) + 5 (J) + 5 (K) + 1 (L) = 81 days
Path 2: 10 (A) + 5 (B) + 10 (E) + 10 (F) + 5 (H) + 10 (I) + 5 (J) + 5 (K) + 1 (L) = 61 days
Path 3: 10 (A) + 20 (D) + 10 (F) + 5 (H) + 10 (I) + 5 (J) + 5 (K) + 1 (L) = 66 days
Step 5: Determine the Critical Path
The critical path is the longest path in the project network, which determines the minimum project duration.
From the calculations:
Critical Path: Path 1 (A → B → C → G → H → I → J → K → L) with a duration of 81 days.
Step 6: Calculate ES, EF, LS, LF for Each Task
Earliest Start (ES):
For tasks with no dependencies, ES = 0 (e.g., A starts at Day 0).
For tasks with dependencies, ES = EF of the immediate predecessor(s).
If a task has multiple predecessors, ES = latest EF among predecessors.
Earliest Finish (EF):
EF = ES + Task Duration.
Latest Finish (LF):
For the last task, LF = Project Duration.
For other tasks, LF = earliest LS among successors.
Latest Start (LS):
LS = LF - Task Duration.
Example Calculations for Task A:
ES = 0 (no dependencies).
EF = ES + Duration = 0 + 10 = 10.
LF = Earliest LS of successors (B and D) = 10.
LS = LF - Duration = 10 - 10 = 0.
Repeat these steps for all tasks to calculate ES, EF, LS, and LF for the entire network.
Step 7: Highlight Float/Slack
Float = LS - ES (or LF - EF).
Tasks with Float = 0 are on the critical path.
Identify non-critical activities with slack time and highlight opportunities for flexibility.
Step 8: Final Results
Critical Path: A → B → C → G → H → I → J → K → L.
Project Duration: 81 days.
Tasks with float/slack represent non-critical activities that can be delayed without affecting the overall timeline.

Write feedback with the template as follows: 

First of all, write one sentence to introduce the feedback purpose and, the connection of doing this exercise to the course module - Time Management. Hightlight for students that this exercise does not relate to the GreenCode project they do but give neccessary skills for time planning for the project.

Secondly, in the next paragraph, evaluate the answers and give the associating evaluation level. Four levels of evaluation are Level 1 - Unsastifactory, Level 2 - Needs Improvement, Level 3 - Satisfactory and Level 4 - Excellence. 

Completely Out of Topic: The student writes irrelevant content, asks unrelated questions, or fails to address the exercise requirements (e.g., discussing unrelated project management principles). Level 1
Partial Answer: The student completes only part of the exercise (e.g., creates a network diagram but does not calculate the critical path or evaluate the float/slack for activities). Level 1
General and Superficial Answer: The student provides vague or generic responses (e.g., “The critical path is the longest path” without identifying specific activities or providing calculations). Level 1
Misunderstanding the Task: The student misinterprets the exercise, such as creating a Gantt chart instead of a network diagram, or incorrectly identifying dependencies between tasks. Level 1
Incomplete Network Diagram: The student creates a network diagram but omits tasks, dependencies, or fails to account for parallel/sequential relationships. Level 2
Incorrect Calculations: The student identifies paths but makes errors in calculating earliest start/finish, latest start/finish, or float/slack for activities. Level 2
Incorrect Identification of Critical Path: The student calculates the paths but fails to correctly identify the longest path or incorrectly determines the project duration. Level 2
Well-Structured but Incomplete Answer: The student provides a logical and correct solution but omits minor details, such as failing to calculate slack or providing partial results. Level 3
Excellent but Slightly Imbalanced Answer: The student provides a thorough and correct solution but places uneven emphasis on specific sections (e.g., detailed network diagram but limited explanation of calculations). Level 3
Excellent and Comprehensive Answer: The student creates a complete and accurate network diagram, identifies all paths, calculates all metrics correctly, determines the critical path, and highlights float/slack for non-critical activities. Level 4

Thirdly briefly summarize the strengths and weaknesses of the answer. If there are wrong calculation or misunderstanding of tasks, quote and highlight the sentences of the wrong caluclation here in a bold text. Give detail instructions to get to the correct calculation.

Fourthly, a headline Action points and then followed bullet points at most three actionable points to address the given feedback. 

Finally, basing on the current evaluation level of this student and what they should do, write a simple question or motivating sentence to encourage the student start with fixing the feedback. 
